{"mode":"Text","hardwareTarget":"brain","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\ncontroller_1 = Controller(PRIMARY)\nIntake = Motor(Ports.PORT10, GearSetting.RATIO_18_1, False)\nL_motor_a = Motor(Ports.PORT1, GearSetting.RATIO_18_1, True)\nL_motor_b = Motor(Ports.PORT2, GearSetting.RATIO_18_1, True)\nL = MotorGroup(L_motor_a, L_motor_b)\nR_motor_a = Motor(Ports.PORT3, GearSetting.RATIO_18_1, False)\nR_motor_b = Motor(Ports.PORT4, GearSetting.RATIO_18_1, False)\nR = MotorGroup(R_motor_a, R_motor_b)\nimu = Inertial(Ports.PORT20)\nRamp = Motor(Ports.PORT11, GearSetting.RATIO_18_1, False)\nHook = Motor(Ports.PORT9, GearSetting.RATIO_18_1, False)\ndeadwheel = Rotation(Ports.PORT21, False)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\n# Make random actually random\ndef initializeRandomSeed():\n    wait(100, MSEC)\n    random = brain.battery.voltage(MV) + brain.battery.current(CurrentUnits.AMP) * 100 + brain.timer.system_high_res()\n    urandom.seed(int(random))\n      \n# Set random seed \ninitializeRandomSeed()\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\nimport math\nimport time\n\n\nL.set_velocity(100, PERCENT)\nR.set_velocity(100, PERCENT)\nRamp.set_velocity(100, PERCENT)\nIntake.set_velocity(100, PERCENT)\n\nL.set_stopping(BRAKE)\nR.set_stopping(BRAKE)\nIntake.set_stopping(BRAKE)\nRamp.set_stopping(BRAKE)\n\n\ndef driver_control():\n    while True:\n        L.set_velocity(controller_1.axis3.position() + controller_1.axis4.position(), PERCENT)\n        R.set_velocity(controller_1.axis3.position() - controller_1.axis4.position(), PERCENT)\n        L.spin(FORWARD)\n        R.spin(FORWARD)\n        if controller_1.buttonL1.pressing():\n            Intake.spin(FORWARD)\n        elif controller_1.buttonL2.pressing():\n            Intake.spin(REVERSE)\n        else:\n            Intake.stop()\n\n\n        if controller_1.buttonR1.pressing():\n            Ramp.spin(FORWARD)\n        elif controller_1.buttonR2.pressing():\n            Ramp.spin(REVERSE)\n        else:\n            Ramp.stop()\n        \n        if controller_1.buttonUp.pressing():\n            Hook.spin_to_position(180,DEGREES)\n        elif controller_1.buttonDown.pressing():\n            Hook.spin_to_position(0,DEGREES)\n        else:\n            Hook.stop()\n\n            \n        \n        wait(20, MSEC)\n\ndef autonomous():\n    L.spin_to_position(4,TURNS,wait=False)\n    R.spin_to_position(4,TURNS,wait=False)\n    L.stop()\n    R.stop()\n    while not L.is_spinning():\n        Intake.spin(FORWARD)\n        Ramp.spin(FORWARD)\n    \n\n    \n\n\n# Define competition controls\ncompetition = Competition(driver_control, autonomous)\n","textLanguage":"python","robotConfig":[{"port":[],"name":"controller_1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[10],"name":"Intake","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[1,2],"name":"L","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"true","motor_b_reversed":"true"},"triportSourcePort":22},{"port":[3,4],"name":"R","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"false","motor_b_reversed":"false","id":"partner"},"triportSourcePort":22},{"port":[20],"name":"imu","customName":true,"deviceType":"Inertial","deviceClass":"inertial","setting":{"id":"partner"},"triportSourcePort":22},{"port":[11],"name":"Ramp","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"}},{"port":[9],"name":"Hook","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"}},{"port":[21],"name":"deadwheel","customName":true,"deviceType":"Rotation","deviceClass":"rotation","setting":{"reversed":"false","id":"partner"}}],"slot":0,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.5","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false}